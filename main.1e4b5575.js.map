{"version":3,"sources":["scripts/main.js"],"names":["MAX_INDEX","CELLS","document","getElementsByClassName","MOVING_AVAILABLE","applyValue","tile","value","innerHTML","classList","length","classes","values","className","remove","add","calculateScore","score","querySelector","sum","i","Number","checkFor2048","toggle","reset","merge","cellMergedTo","cellMergedWith","replace","cellReplacedTo","cellReplacedWith","handleMoving","direction","moveMade","j","k","handleInput","checkMergingAvailable","checkIfMovesAvailable","inputRandom","randomIndex","Math","floor","random","startGame","addEventListener","e","key","toString"],"mappings":"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","file":"main.1e4b5575.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst MAX_INDEX = 16;\nconst CELLS = document.getElementsByClassName('field-cell');\nlet MOVING_AVAILABLE = true;\n\nfunction applyValue(tile, value) {\n  tile.innerHTML = value;\n\n  if (tile.classList.length > 1) {\n    const classes = tile.classList.values();\n\n    for (const className of classes) {\n      if (className !== 'field-cell') {\n        tile.classList.remove(className);\n      }\n    }\n  }\n\n  if (value) {\n    tile.classList.add(`field-cell--${value}`);\n  }\n\n  calculateScore();\n}\n\nfunction calculateScore() {\n  const score = document.querySelector('.game-score');\n  let sum = 0;\n\n  for (let i = 0; i < CELLS.length; i++) {\n    sum += Number(CELLS[i].innerHTML);\n  }\n\n  score.innerHTML = sum;\n}\n\nfunction checkFor2048() {\n  for (let i = 0; i < 16; i++) {\n    if (Number(CELLS[i].innerHTML) === 2048) {\n      MOVING_AVAILABLE = false;\n\n      document.querySelector('.message-win')\n        .classList.toggle('hidden');\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction reset() {\n  MOVING_AVAILABLE = true;\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.start').classList.remove('restart');\n  document.querySelector('.game-score').innerHTML = 0;\n  document.querySelector('.start').innerHTML = 'Start';\n\n  for (let i = 0; i < CELLS.length; i++) {\n    applyValue(CELLS[i], '');\n  }\n}\n\nfunction merge(cellMergedTo, cellMergedWith) {\n  applyValue(cellMergedTo, cellMergedTo.innerHTML * 2);\n  applyValue(cellMergedWith, '');\n}\n\nfunction replace(cellReplacedTo, cellReplacedWith) {\n  applyValue(cellReplacedTo, cellReplacedWith.innerHTML);\n  applyValue(cellReplacedWith, '');\n}\n\nfunction handleMoving(direction) {\n  if (!MOVING_AVAILABLE) {\n    return;\n  }\n\n  let moveMade = false;\n\n  switch (direction) {\n    case 'ArrowLeft':\n      for (let j = 0; j < 16; j += 4) {\n        for (let i = j; i <= j + 3; i++) {\n          for (let k = i + 1; k <= j + 3; k++) {\n            if (CELLS[i].innerHTML !== '' && CELLS[k].innerHTML !== '') {\n              if (CELLS[i].innerHTML === CELLS[k].innerHTML) {\n                merge(CELLS[i], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && CELLS[i + 1].innerHTML === ''\n              ) {\n                replace(CELLS[i + 1], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && k === i + 1\n              ) {\n                break;\n              }\n            } else if (CELLS[i].innerHTML === '' && CELLS[k].innerHTML !== '') {\n              replace(CELLS[i], CELLS[k]);\n              moveMade = true;\n            }\n          }\n        }\n      }\n\n      handleInput(moveMade);\n      break;\n\n    case 'ArrowUp':\n      for (let j = 0; j < 4; j++) {\n        for (let i = j; i < 16; i += 4) {\n          for (let k = i + 4; k < 16; k += 4) {\n            if (CELLS[i].innerHTML !== '' && CELLS[k].innerHTML !== '') {\n              if (CELLS[i].innerHTML === CELLS[k].innerHTML) {\n                merge(CELLS[i], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && CELLS[i + 4].innerHTML === ''\n              ) {\n                replace(CELLS[i + 4], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && k === i + 4\n              ) {\n                break;\n              }\n            } else if (CELLS[i].innerHTML === '' && CELLS[k].innerHTML !== '') {\n              replace(CELLS[i], CELLS[k]);\n              moveMade = true;\n            }\n          }\n        }\n      }\n\n      handleInput(moveMade);\n      break;\n\n    case 'ArrowRight':\n      for (let j = 3; j < 16; j += 4) {\n        for (let i = j; i >= j - 3; i--) {\n          for (let k = i - 1; k >= j - 3; k--) {\n            if (CELLS[i].innerHTML !== '' && CELLS[k].innerHTML !== '') {\n              if (CELLS[i].innerHTML === CELLS[k].innerHTML) {\n                merge(CELLS[i], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && CELLS[i - 1].innerHTML === ''\n              ) {\n                replace(CELLS[i - 1], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && k === i - 1\n              ) {\n                break;\n              }\n            } else if (CELLS[i].innerHTML === '' && CELLS[k].innerHTML !== '') {\n              replace(CELLS[i], CELLS[k]);\n              moveMade = true;\n            }\n          }\n        }\n      }\n\n      handleInput(moveMade);\n      break;\n\n    case 'ArrowDown':\n      for (let j = 15; j >= 12; j--) {\n        for (let i = j; i >= 0; i -= 4) {\n          for (let k = i - 4; k >= 0; k -= 4) {\n            if (CELLS[i].innerHTML !== '' && CELLS[k].innerHTML !== '') {\n              if (CELLS[i].innerHTML === CELLS[k].innerHTML) {\n                merge(CELLS[i], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && CELLS[i - 4].innerHTML === ''\n              ) {\n                replace(CELLS[i - 4], CELLS[k]);\n                moveMade = true;\n                break;\n              } else if (\n                CELLS[i].innerHTML !== CELLS[k].innerHTML\n                && k === i - 4\n              ) {\n                break;\n              }\n            } else if (CELLS[i].innerHTML === '' && CELLS[k].innerHTML !== '') {\n              replace(CELLS[i], CELLS[k]);\n              moveMade = true;\n            }\n          }\n        }\n      }\n\n      handleInput(moveMade);\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction checkMergingAvailable() {\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (CELLS[i * 4 + j].innerHTML === CELLS[i * 4 + j + 1].innerHTML\n        || (CELLS[j * 4 + i].innerHTML === CELLS[j * 4 + i + 4].innerHTML)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkIfMovesAvailable() {\n  for (let i = 0; i < 16; i++) {\n    if (CELLS[i].innerHTML === '') {\n      return true;\n    }\n  }\n\n  return checkMergingAvailable();\n}\n\nfunction inputRandom() {\n  let randomIndex = Math.floor(Math.random() * MAX_INDEX);\n\n  while (CELLS[randomIndex].innerHTML) {\n    randomIndex = Math.floor(Math.random() * MAX_INDEX);\n  }\n\n  const value = Math.random() > 0.1 ? 2 : 4;\n\n  applyValue(CELLS[randomIndex], value);\n}\n\nfunction handleInput(moveMade) {\n  if (!moveMade) {\n    return;\n  }\n\n  inputRandom();\n\n  if (checkFor2048()) {\n    return;\n  }\n\n  if (!checkIfMovesAvailable()) {\n    MOVING_AVAILABLE = false;\n\n    document.querySelector('.message-lose')\n      .classList.remove('hidden');\n  }\n}\n\nfunction startGame() {\n  reset();\n\n  for (let i = 0; i < 2; i++) {\n    inputRandom();\n  }\n}\n\ndocument.addEventListener('keydown', e => {\n  document.querySelector('.start').innerHTML = 'Restart';\n  document.querySelector('.start').classList.add('restart');\n  handleMoving(e.key.toString());\n});\n\ndocument.querySelector('.start').addEventListener('click', function() {\n  startGame();\n});\n"]}